{"version":3,"file":"index.js","sources":["../dist-src/types.js","../dist-src/utils.js","../dist-src/web.js"],"sourcesContent":["export var Algorithm;\n(function (Algorithm) {\n    Algorithm[\"SHA1\"] = \"sha1\";\n    Algorithm[\"SHA256\"] = \"sha256\";\n})(Algorithm || (Algorithm = {}));\n","export const getAlgorithm = (signature) => {\n    return signature.startsWith(\"sha256=\") ? \"sha256\" : \"sha1\";\n};\n","import { Algorithm } from \"./types\";\nimport { getAlgorithm } from \"./utils\";\nconst enc = new TextEncoder();\nfunction hexToUInt8Array(string) {\n    // convert string to pairs of 2 characters\n    const pairs = string.match(/[\\dA-F]{2}/gi);\n    // convert the octets to integers\n    const integers = pairs.map(function (s) {\n        return parseInt(s, 16);\n    });\n    return new Uint8Array(integers);\n}\nfunction UInt8ArrayToHex(signature) {\n    return Array.prototype.map\n        .call(new Uint8Array(signature), (x) => x.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\nfunction getHMACHashName(algorithm) {\n    return {\n        [Algorithm.SHA1]: \"SHA-1\",\n        [Algorithm.SHA256]: \"SHA-256\",\n    }[algorithm];\n}\nasync function importKey(secret, algorithm) {\n    // ref: https://developer.mozilla.org/en-US/docs/Web/API/HmacImportParams\n    return crypto.subtle.importKey(\"raw\", // raw format of the key - should be Uint8Array\n    enc.encode(secret), {\n        // algorithm details\n        name: \"HMAC\",\n        hash: { name: getHMACHashName(algorithm) },\n    }, false, // export = false\n    [\"sign\", \"verify\"] // what this key can do\n    );\n}\nexport async function sign(options, payload) {\n    const { secret, algorithm } = typeof options === \"object\"\n        ? {\n            secret: options.secret,\n            algorithm: options.algorithm || Algorithm.SHA256,\n        }\n        : { secret: options, algorithm: Algorithm.SHA256 };\n    if (!secret || !payload) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret & payload required for sign()\");\n    }\n    if (!Object.values(Algorithm).includes(algorithm)) {\n        throw new TypeError(`[@octokit/webhooks] Algorithm ${algorithm} is not supported. Must be  'sha1' or 'sha256'`);\n    }\n    const signature = await crypto.subtle.sign(\"HMAC\", await importKey(secret, algorithm), enc.encode(payload));\n    return `${algorithm}=${UInt8ArrayToHex(signature)}`;\n}\nexport async function verify(secret, eventPayload, signature) {\n    if (!secret || !eventPayload || !signature) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret, eventPayload & signature required\");\n    }\n    const algorithm = getAlgorithm(signature);\n    return await crypto.subtle.verify(\"HMAC\", await importKey(secret, algorithm), hexToUInt8Array(signature.replace(`${algorithm}=`, \"\")), enc.encode(eventPayload));\n}\n"],"names":[],"mappings":"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"}
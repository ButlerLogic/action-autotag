{"version":3,"file":"index.js","sources":["../dist-src/get-app-authentication.js","../dist-src/cache.js","../dist-src/to-token-authentication.js","../dist-src/get-installation-authentication.js","../dist-src/auth.js","../dist-src/requires-app-auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { githubAppJwt } from \"universal-github-app-jwt\";\nexport async function getAppAuthentication({ appId, privateKey, timeDifference, }) {\n    try {\n        const appAuthentication = await githubAppJwt({\n            id: +appId,\n            privateKey,\n            now: timeDifference && Math.floor(Date.now() / 1000) + timeDifference,\n        });\n        return {\n            type: \"app\",\n            token: appAuthentication.token,\n            appId: appAuthentication.appId,\n            expiresAt: new Date(appAuthentication.expiration * 1000).toISOString(),\n        };\n    }\n    catch (error) {\n        if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n            throw new Error(\"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\");\n        }\n        else {\n            throw error;\n        }\n    }\n}\n","// https://github.com/isaacs/node-lru-cache#readme\nimport LRU from \"lru-cache\";\nexport function getCache() {\n    return new LRU({\n        // cache max. 15000 tokens, that will use less than 10mb memory\n        max: 15000,\n        // Cache for 1 minute less than GitHub expiry\n        maxAge: 1000 * 60 * 59,\n    });\n}\nexport async function get(cache, options) {\n    const cacheKey = optionsToCacheKey(options);\n    const result = await cache.get(cacheKey);\n    if (!result) {\n        return;\n    }\n    const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName,] = result.split(\"|\");\n    const permissions = options.permissions ||\n        permissionsString.split(/,/).reduce((permissions, string) => {\n            if (/!$/.test(string)) {\n                permissions[string.slice(0, -1)] = \"write\";\n            }\n            else {\n                permissions[string] = \"read\";\n            }\n            return permissions;\n        }, {});\n    return {\n        token,\n        createdAt,\n        expiresAt,\n        permissions,\n        repositoryIds: options.repositoryIds,\n        repositoryNames: options.repositoryNames,\n        singleFileName,\n        repositorySelection: repositorySelection,\n    };\n}\nexport async function set(cache, options, data) {\n    const key = optionsToCacheKey(options);\n    const permissionsString = options.permissions\n        ? \"\"\n        : Object.keys(data.permissions)\n            .map((name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`)\n            .join(\",\");\n    const value = [\n        data.token,\n        data.createdAt,\n        data.expiresAt,\n        data.repositorySelection,\n        permissionsString,\n        data.singleFileName,\n    ].join(\"|\");\n    await cache.set(key, value);\n}\nfunction optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], repositoryNames = [], }) {\n    const permissionsString = Object.keys(permissions)\n        .sort()\n        .map((name) => (permissions[name] === \"read\" ? name : `${name}!`))\n        .join(\",\");\n    const repositoryIdsString = repositoryIds.sort().join(\",\");\n    const repositoryNamesString = repositoryNames.join(\",\");\n    return [\n        installationId,\n        repositoryIdsString,\n        repositoryNamesString,\n        permissionsString,\n    ]\n        .filter(Boolean)\n        .join(\"|\");\n}\n","export function toTokenAuthentication({ installationId, token, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, repositoryNames, singleFileName, }) {\n    return Object.assign({\n        type: \"token\",\n        tokenType: \"installation\",\n        token,\n        installationId,\n        permissions,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n    }, repositoryIds ? { repositoryIds } : null, repositoryNames ? { repositoryNames } : null, singleFileName ? { singleFileName } : null);\n}\n","import { get, set } from \"./cache\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { toTokenAuthentication } from \"./to-token-authentication\";\nexport async function getInstallationAuthentication(state, options, customRequest) {\n    const installationId = Number(options.installationId || state.installationId);\n    if (!installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n    }\n    if (options.factory) {\n        const { type, factory, oauthApp, ...factoryAuthOptions } = {\n            ...state,\n            ...options,\n        };\n        // @ts-expect-error if `options.factory` is set, the return type for `auth()` should be `Promise<ReturnType<options.factory>>`\n        return factory(factoryAuthOptions);\n    }\n    const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);\n    if (!options.refresh) {\n        const result = await get(state.cache, optionsWithInstallationTokenFromState);\n        if (result) {\n            const { token, createdAt, expiresAt, permissions, repositoryIds, repositoryNames, singleFileName, repositorySelection, } = result;\n            return toTokenAuthentication({\n                installationId,\n                token,\n                createdAt,\n                expiresAt,\n                permissions,\n                repositorySelection,\n                repositoryIds,\n                repositoryNames,\n                singleFileName,\n            });\n        }\n    }\n    const appAuthentication = await getAppAuthentication(state);\n    const request = customRequest || state.request;\n    const { data: { token, expires_at: expiresAt, repositories, permissions: permissionsOptional, repository_selection: repositorySelectionOptional, single_file: singleFileName, }, } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n        installation_id: installationId,\n        repository_ids: options.repositoryIds,\n        repositories: options.repositoryNames,\n        permissions: options.permissions,\n        mediaType: {\n            previews: [\"machine-man\"],\n        },\n        headers: {\n            authorization: `bearer ${appAuthentication.token}`,\n        },\n    });\n    /* istanbul ignore next - permissions are optional per OpenAPI spec, but we think that is incorrect */\n    const permissions = permissionsOptional || {};\n    /* istanbul ignore next - repositorySelection are optional per OpenAPI spec, but we think that is incorrect */\n    const repositorySelection = repositorySelectionOptional || \"all\";\n    const repositoryIds = repositories\n        ? repositories.map((r) => r.id)\n        : void 0;\n    const repositoryNames = repositories\n        ? repositories.map((repo) => repo.name)\n        : void 0;\n    const createdAt = new Date().toISOString();\n    await set(state.cache, optionsWithInstallationTokenFromState, {\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n    return toTokenAuthentication({\n        installationId,\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n}\n","import { Deprecation } from \"deprecation\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nexport async function auth(state, authOptions) {\n    switch (authOptions.type) {\n        case \"app\":\n            return getAppAuthentication(state);\n        // @ts-expect-error \"oauth\" is not supperted in types\n        case \"oauth\":\n            state.log.warn(\n            // @ts-expect-error `log.warn()` expects string\n            new Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n        case \"oauth-app\":\n            return state.oauthApp({ type: \"oauth-app\" });\n        case \"installation\":\n            authOptions;\n            return getInstallationAuthentication(state, {\n                ...authOptions,\n                type: \"installation\",\n            });\n        case \"oauth-user\":\n            // @ts-expect-error TODO: infer correct auth options type based on type. authOptions should be typed as \"WebFlowAuthOptions | OAuthAppDeviceFlowAuthOptions | GitHubAppDeviceFlowAuthOptions\"\n            return state.oauthApp(authOptions);\n        default:\n            // @ts-expect-error type is \"never\" at this point\n            throw new Error(`Invalid auth type: ${authOptions.type}`);\n    }\n}\n","const PATHS = [\n    \"/app\",\n    \"/app/hook/config\",\n    \"/app/hook/deliveries\",\n    \"/app/hook/deliveries/{delivery_id}\",\n    \"/app/hook/deliveries/{delivery_id}/attempts\",\n    \"/app/installations\",\n    \"/app/installations/{installation_id}\",\n    \"/app/installations/{installation_id}/access_tokens\",\n    \"/app/installations/{installation_id}/suspended\",\n    \"/marketplace_listing/accounts/{account_id}\",\n    \"/marketplace_listing/plan\",\n    \"/marketplace_listing/plans\",\n    \"/marketplace_listing/plans/{plan_id}/accounts\",\n    \"/marketplace_listing/stubbed/accounts/{account_id}\",\n    \"/marketplace_listing/stubbed/plan\",\n    \"/marketplace_listing/stubbed/plans\",\n    \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"/orgs/{org}/installation\",\n    \"/repos/{owner}/{repo}/installation\",\n    \"/users/{username}/installation\",\n];\n// CREDIT: Simon Grondin (https://github.com/SGrondin)\n// https://github.com/octokit/plugin-throttling.js/blob/45c5d7f13b8af448a9dbca468d9c9150a73b3948/lib/route-matcher.js\nfunction routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((p) => p\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\nconst REGEX = routeMatcher(PATHS);\nexport function requiresAppAuth(url) {\n    return !!url && REGEX.test(url);\n}\n","import { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nimport { requiresAppAuth } from \"./requires-app-auth\";\nconst FIVE_SECONDS_IN_MS = 5 * 1000;\nfunction isNotTimeSkewError(error) {\n    return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) ||\n        error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nexport async function hook(state, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    const url = endpoint.url;\n    // Do not intercept request to retrieve a new token\n    if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n        return request(endpoint);\n    }\n    if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n        const { token } = await getAppAuthentication(state);\n        endpoint.headers.authorization = `bearer ${token}`;\n        let response;\n        try {\n            response = await request(endpoint);\n        }\n        catch (error) {\n            // If there's an issue with the expiration, regenerate the token and try again.\n            // Otherwise rethrow the error for upstream handling.\n            if (isNotTimeSkewError(error)) {\n                throw error;\n            }\n            // If the date header is missing, we can't correct the system time skew.\n            // Throw the error to be handled upstream.\n            if (typeof error.response.headers.date === \"undefined\") {\n                throw error;\n            }\n            const diff = Math.floor((Date.parse(error.response.headers.date) -\n                Date.parse(new Date().toString())) /\n                1000);\n            state.log.warn(error.message);\n            state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n            const { token } = await getAppAuthentication({\n                ...state,\n                timeDifference: diff,\n            });\n            endpoint.headers.authorization = `bearer ${token}`;\n            return request(endpoint);\n        }\n        return response;\n    }\n    if (requiresBasicAuth(url)) {\n        const authentication = await state.oauthApp({ type: \"oauth-app\" });\n        endpoint.headers.authorization = authentication.headers.authorization;\n        return request(endpoint);\n    }\n    const { token, createdAt } = await getInstallationAuthentication(state, \n    // @ts-expect-error TBD\n    {}, request);\n    endpoint.headers.authorization = `token ${token}`;\n    return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\n/**\n * Newly created tokens might not be accessible immediately after creation.\n * In case of a 401 response, we retry with an exponential delay until more\n * than five seconds pass since the creation of the token.\n *\n * @see https://github.com/octokit/auth-app.js/issues/65\n */\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n    const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);\n    try {\n        return await request(options);\n    }\n    catch (error) {\n        if (error.status !== 401) {\n            throw error;\n        }\n        if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n            if (retries > 0) {\n                error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1000}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n            }\n            throw error;\n        }\n        ++retries;\n        const awaitTime = retries * 1000;\n        state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1000}s)`);\n        await new Promise((resolve) => setTimeout(resolve, awaitTime));\n        return sendRequestWithRetries(state, request, options, createdAt, retries);\n    }\n}\n","export const VERSION = \"4.0.9\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { getCache } from \"./cache\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createAppAuth(options) {\n    if (!options.appId) {\n        throw new Error(\"[@octokit/auth-app] appId option is required\");\n    }\n    if (!Number.isFinite(+options.appId)) {\n        throw new Error(\"[@octokit/auth-app] appId option must be a number or numeric string\");\n    }\n    if (!options.privateKey) {\n        throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n    }\n    if (\"installationId\" in options && !options.installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n    }\n    const log = Object.assign({\n        warn: console.warn.bind(console),\n    }, options.log);\n    const request = options.request ||\n        defaultRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const state = Object.assign({\n        request,\n        cache: getCache(),\n    }, options, options.installationId\n        ? { installationId: Number(options.installationId) }\n        : {}, {\n        log,\n        oauthApp: createOAuthAppAuth({\n            clientType: \"github-app\",\n            clientId: options.clientId || \"\",\n            clientSecret: options.clientSecret || \"\",\n            request,\n        }),\n    });\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":["getAppAuthentication","appId","privateKey","timeDifference","appAuthentication","githubAppJwt","id","now","Math","floor","Date","type","token","expiresAt","expiration","toISOString","error","Error","getCache","LRU","max","maxAge","get","cache","options","cacheKey","optionsToCacheKey","result","createdAt","repositorySelection","permissionsString","singleFileName","split","permissions","reduce","string","test","slice","repositoryIds","repositoryNames","set","data","key","Object","keys","map","name","join","value","installationId","sort","repositoryIdsString","repositoryNamesString","filter","Boolean","toTokenAuthentication","assign","tokenType","getInstallationAuthentication","state","customRequest","Number","factory","oauthApp","factoryAuthOptions","optionsWithInstallationTokenFromState","refresh","request","expires_at","repositories","permissionsOptional","repository_selection","repositorySelectionOptional","single_file","installation_id","repository_ids","mediaType","previews","headers","authorization","r","repo","auth","authOptions","log","warn","Deprecation","PATHS","routeMatcher","paths","regexes","p","c","startsWith","regex","RegExp","REGEX","requiresAppAuth","url","FIVE_SECONDS_IN_MS","isNotTimeSkewError","message","match","hook","route","parameters","endpoint","merge","replace","DEFAULTS","baseUrl","response","date","diff","parse","toString","requiresBasicAuth","authentication","sendRequestWithRetries","retries","timeSinceTokenCreationInMs","status","awaitTime","Promise","resolve","setTimeout","VERSION","createAppAuth","isFinite","console","bind","defaultRequest","defaults","getUserAgent","createOAuthAppAuth","clientType","clientId","clientSecret"],"mappings":"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"}
import * as OAuthMethods from "@octokit/oauth-methods";
export function getWebFlowAuthorizationUrlWithState(state, options) {
    let allowSignup;
    if (options.allowSignup === undefined && state.allowSignup === undefined) {
        allowSignup = true;
    }
    else if (options.allowSignup === undefined &&
        state.allowSignup !== undefined) {
        allowSignup = state.allowSignup;
    }
    else if (state.allowSignup === undefined &&
        options.allowSignup !== undefined) {
        allowSignup = options.allowSignup;
    }
    else {
        allowSignup = options.allowSignup || state.allowSignup;
    }
    const optionsWithDefaults = {
        clientId: state.clientId,
        request: state.octokit.request,
        ...options,
        allowSignup,
        redirectUrl: options.redirectUrl || state.redirectUrl,
        scopes: options.scopes || state.defaultScopes,
    };
    return OAuthMethods.getWebFlowAuthorizationUrl({
        clientType: state.clientType,
        ...optionsWithDefaults,
    });
}

{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/utils.js","../dist-src/get-web-flow-authorization-url.js","../dist-src/exchange-web-flow-code.js","../dist-src/create-device-code.js","../dist-src/exchange-device-code.js","../dist-src/check-token.js","../dist-src/refresh-token.js","../dist-src/scope-token.js","../dist-src/reset-token.js","../dist-src/delete-token.js","../dist-src/delete-authorization.js"],"sourcesContent":["export const VERSION = \"2.0.5\";\n","import { RequestError } from \"@octokit/request-error\";\nexport function requestToOAuthBaseUrl(request) {\n    const endpointDefaults = request.endpoint.DEFAULTS;\n    return /^https:\\/\\/(api\\.)?github\\.com$/.test(endpointDefaults.baseUrl)\n        ? \"https://github.com\"\n        : endpointDefaults.baseUrl.replace(\"/api/v3\", \"\");\n}\nexport async function oauthRequest(request, route, parameters) {\n    const withOAuthParameters = {\n        baseUrl: requestToOAuthBaseUrl(request),\n        headers: {\n            accept: \"application/json\",\n        },\n        ...parameters,\n    };\n    const response = await request(route, withOAuthParameters);\n    if (\"error\" in response.data) {\n        const error = new RequestError(`${response.data.error_description} (${response.data.error}, ${response.data.error_uri})`, 400, {\n            request: request.endpoint.merge(route, withOAuthParameters),\n            headers: response.headers,\n        });\n        // @ts-ignore add custom response property until https://github.com/octokit/request-error.js/issues/169 is resolved\n        error.response = response;\n        throw error;\n    }\n    return response;\n}\n","import { oauthAuthorizationUrl, } from \"@octokit/oauth-authorization-url\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { requestToOAuthBaseUrl } from \"./utils\";\nexport function getWebFlowAuthorizationUrl({ request = defaultRequest, ...options }) {\n    const baseUrl = requestToOAuthBaseUrl(request);\n    // @ts-expect-error TypeScript wants `clientType` to be set explicitly ¯\\_(ツ)_/¯\n    return oauthAuthorizationUrl({\n        ...options,\n        baseUrl,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeWebFlowCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        code: options.code,\n        redirect_uri: options.redirectUrl,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function createDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const parameters = {\n        client_id: options.clientId,\n    };\n    if (\"scopes\" in options && Array.isArray(options.scopes)) {\n        parameters.scope = options.scopes.join(\" \");\n    }\n    return oauthRequest(request, \"POST /login/device/code\", parameters);\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function exchangeDeviceCode(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        device_code: options.code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        token: response.data.access_token,\n        scopes: response.data.scope.split(/\\s+/).filter(Boolean),\n    };\n    if (\"clientSecret\" in options) {\n        authentication.clientSecret = options.clientSecret;\n    }\n    if (options.clientType === \"github-app\") {\n        if (\"refresh_token\" in response.data) {\n            const apiTimeInMs = new Date(response.headers.date).getTime();\n            (authentication.refreshToken = response.data.refresh_token),\n                (authentication.expiresAt = toTimestamp(apiTimeInMs, response.data.expires_in)),\n                (authentication.refreshTokenExpiresAt = toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in));\n        }\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function checkToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${btoa(`${options.clientId}:${options.clientSecret}`)}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: options.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport { oauthRequest } from \"./utils\";\nexport async function refreshToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await oauthRequest(request, \"POST /login/oauth/access_token\", {\n        client_id: options.clientId,\n        client_secret: options.clientSecret,\n        grant_type: \"refresh_token\",\n        refresh_token: options.refreshToken,\n    });\n    const apiTimeInMs = new Date(response.headers.date).getTime();\n    const authentication = {\n        clientType: \"github-app\",\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.access_token,\n        refreshToken: response.data.refresh_token,\n        expiresAt: toTimestamp(apiTimeInMs, response.data.expires_in),\n        refreshTokenExpiresAt: toTimestamp(apiTimeInMs, response.data.refresh_token_expires_in),\n    };\n    return { ...response, authentication };\n}\nfunction toTimestamp(apiTimeInMs, expirationInSeconds) {\n    return new Date(apiTimeInMs + expirationInSeconds * 1000).toISOString();\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function scopeToken(options) {\n    const { request: optionsRequest, clientType, clientId, clientSecret, token, ...requestOptions } = options;\n    const request = optionsRequest ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const response = await request(\"POST /applications/{client_id}/token/scoped\", {\n        headers: {\n            authorization: `basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        },\n        client_id: clientId,\n        access_token: token,\n        ...requestOptions,\n    });\n    const authentication = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        token: response.data.token,\n    }, response.data.expires_at ? { expiresAt: response.data.expires_at } : {});\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function resetToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    const response = await request(\"PATCH /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n    const authentication = {\n        clientType: options.clientType,\n        clientId: options.clientId,\n        clientSecret: options.clientSecret,\n        token: response.data.token,\n        scopes: response.data.scopes,\n    };\n    if (response.data.expires_at)\n        authentication.expiresAt = response.data.expires_at;\n    if (options.clientType === \"github-app\") {\n        delete authentication.scopes;\n    }\n    return { ...response, authentication };\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteToken(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/token\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n","import { request as defaultRequest } from \"@octokit/request\";\nimport btoa from \"btoa-lite\";\nexport async function deleteAuthorization(options) {\n    const request = options.request ||\n        /* istanbul ignore next: we always pass a custom request in tests */\n        defaultRequest;\n    const auth = btoa(`${options.clientId}:${options.clientSecret}`);\n    return request(\"DELETE /applications/{client_id}/grant\", {\n        headers: {\n            authorization: `basic ${auth}`,\n        },\n        client_id: options.clientId,\n        access_token: options.token,\n    });\n}\n"],"names":["VERSION","requestToOAuthBaseUrl","request","endpointDefaults","endpoint","DEFAULTS","test","baseUrl","replace","oauthRequest","route","parameters","withOAuthParameters","headers","accept","response","data","error","RequestError","error_description","error_uri","merge","getWebFlowAuthorizationUrl","defaultRequest","options","oauthAuthorizationUrl","exchangeWebFlowCode","client_id","clientId","client_secret","clientSecret","code","redirect_uri","redirectUrl","authentication","clientType","token","access_token","scopes","scope","split","filter","Boolean","apiTimeInMs","Date","date","getTime","refreshToken","refresh_token","expiresAt","toTimestamp","expires_in","refreshTokenExpiresAt","refresh_token_expires_in","expirationInSeconds","toISOString","createDeviceCode","Array","isArray","join","exchangeDeviceCode","device_code","grant_type","checkToken","authorization","btoa","expires_at","scopeToken","optionsRequest","requestOptions","Object","assign","resetToken","auth","deleteToken","deleteAuthorization"],"mappings":"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"}
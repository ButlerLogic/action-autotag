{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/get-authentication.js","../dist-src/auth.js","../dist-src/requires-basic-auth.js","../dist-src/hook.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"2.1.1\";\n","// @ts-nocheck there is only place for one of us in this file. And it's not you, TS\nimport { createOAuthDeviceAuth } from \"@octokit/auth-oauth-device\";\nimport { exchangeWebFlowCode } from \"@octokit/oauth-methods\";\nexport async function getAuthentication(state) {\n    // handle code exchange form OAuth Web Flow\n    if (\"code\" in state.strategyOptions) {\n        const { authentication } = await exchangeWebFlowCode({\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            onTokenCreated: state.onTokenCreated,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    // handle OAuth device flow\n    if (\"onVerification\" in state.strategyOptions) {\n        const deviceAuth = createOAuthDeviceAuth({\n            clientType: state.clientType,\n            clientId: state.clientId,\n            onTokenCreated: state.onTokenCreated,\n            ...state.strategyOptions,\n            request: state.request,\n        });\n        const authentication = await deviceAuth({\n            type: \"oauth\",\n        });\n        return {\n            clientSecret: state.clientSecret,\n            ...authentication,\n        };\n    }\n    // use existing authentication\n    if (\"token\" in state.strategyOptions) {\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            onTokenCreated: state.onTokenCreated,\n            ...state.strategyOptions,\n        };\n    }\n    throw new Error(\"[@octokit/auth-oauth-user] Invalid strategy options\");\n}\n","import { getAuthentication } from \"./get-authentication\";\nimport { checkToken, deleteAuthorization, deleteToken, refreshToken, resetToken, } from \"@octokit/oauth-methods\";\nexport async function auth(state, options = {}) {\n    if (!state.authentication) {\n        // This is what TS makes us do ¯\\_(ツ)_/¯\n        state.authentication =\n            state.clientType === \"oauth-app\"\n                ? await getAuthentication(state)\n                : await getAuthentication(state);\n    }\n    if (state.authentication.invalid) {\n        throw new Error(\"[@octokit/auth-oauth-user] Token is invalid\");\n    }\n    const currentAuthentication = state.authentication;\n    // (auto) refresh for user-to-server tokens\n    if (\"expiresAt\" in currentAuthentication) {\n        if (options.type === \"refresh\" ||\n            new Date(currentAuthentication.expiresAt) < new Date()) {\n            const { authentication } = await refreshToken({\n                clientType: \"github-app\",\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                refreshToken: currentAuthentication.refreshToken,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                ...authentication,\n            };\n        }\n    }\n    // throw error for invalid refresh call\n    if (options.type === \"refresh\") {\n        if (state.clientType === \"oauth-app\") {\n            throw new Error(\"[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens\");\n        }\n        if (!currentAuthentication.hasOwnProperty(\"expiresAt\")) {\n            throw new Error(\"[@octokit/auth-oauth-user] Refresh token missing\");\n        }\n        await state.onTokenCreated?.(state.authentication, {\n            type: options.type,\n        });\n    }\n    // check or reset token\n    if (options.type === \"check\" || options.type === \"reset\") {\n        const method = options.type === \"check\" ? checkToken : resetToken;\n        try {\n            const { authentication } = await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n            state.authentication = {\n                tokenType: \"oauth\",\n                type: \"token\",\n                // @ts-expect-error TBD\n                ...authentication,\n            };\n            if (options.type === \"reset\") {\n                await state.onTokenCreated?.(state.authentication, {\n                    type: options.type,\n                });\n            }\n            return state.authentication;\n        }\n        catch (error) {\n            // istanbul ignore else\n            if (error.status === 404) {\n                error.message = \"[@octokit/auth-oauth-user] Token is invalid\";\n                // @ts-expect-error TBD\n                state.authentication.invalid = true;\n            }\n            throw error;\n        }\n    }\n    // invalidate\n    if (options.type === \"delete\" || options.type === \"deleteAuthorization\") {\n        const method = options.type === \"delete\" ? deleteToken : deleteAuthorization;\n        try {\n            await method({\n                // @ts-expect-error making TS happy would require unnecessary code so no\n                clientType: state.clientType,\n                clientId: state.clientId,\n                clientSecret: state.clientSecret,\n                token: state.authentication.token,\n                request: state.request,\n            });\n        }\n        catch (error) {\n            // istanbul ignore if\n            if (error.status !== 404)\n                throw error;\n        }\n        state.authentication.invalid = true;\n        return state.authentication;\n    }\n    return state.authentication;\n}\n","/**\n * The following endpoints require an OAuth App to authenticate using its client_id and client_secret.\n *\n * - [`POST /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#check-a-token) - Check a token\n * - [`PATCH /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#reset-a-token) - Reset a token\n * - [`POST /applications/{client_id}/token/scoped`](https://docs.github.com/en/rest/reference/apps#create-a-scoped-access-token) - Create a scoped access token\n * - [`DELETE /applications/{client_id}/token`](https://docs.github.com/en/rest/reference/apps#delete-an-app-token) - Delete an app token\n * - [`DELETE /applications/{client_id}/grant`](https://docs.github.com/en/rest/reference/apps#delete-an-app-authorization) - Delete an app authorization\n *\n * deprecated:\n *\n * - [`GET /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#check-an-authorization) - Check an authorization\n * - [`POST /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#reset-an-authorization) - Reset an authorization\n * - [`DELETE /applications/{client_id}/tokens/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-an-authorization-for-an-application) - Revoke an authorization for an application\n * - [`DELETE /applications/{client_id}/grants/{access_token}`](https://docs.github.com/en/rest/reference/apps#revoke-a-grant-for-an-application) - Revoke a grant for an application\n */\nconst ROUTES_REQUIRING_BASIC_AUTH = /\\/applications\\/[^/]+\\/(token|grant)s?/;\nexport function requiresBasicAuth(url) {\n    return url && ROUTES_REQUIRING_BASIC_AUTH.test(url);\n}\n","import btoa from \"btoa-lite\";\nimport { auth } from \"./auth\";\nimport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport async function hook(state, request, route, parameters = {}) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (requiresBasicAuth(endpoint.url)) {\n        const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n        endpoint.headers.authorization = `basic ${credentials}`;\n        return request(endpoint);\n    }\n    // TS makes us do this ¯\\_(ツ)_/¯\n    const { token } = state.clientType === \"oauth-app\"\n        ? await auth({ ...state, request })\n        : await auth({ ...state, request });\n    endpoint.headers.authorization = \"token \" + token;\n    return request(endpoint);\n}\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { VERSION } from \"./version\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nexport { requiresBasicAuth } from \"./requires-basic-auth\";\nexport function createOAuthUserAuth({ clientId, clientSecret, clientType = \"oauth-app\", request = octokitRequest.defaults({\n    headers: {\n        \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n    },\n}), onTokenCreated, ...strategyOptions }) {\n    const state = Object.assign({\n        clientType,\n        clientId,\n        clientSecret,\n        onTokenCreated,\n        strategyOptions,\n        request,\n    });\n    // @ts-expect-error not worth the extra code needed to appease TS\n    return Object.assign(auth.bind(null, state), {\n        // @ts-expect-error not worth the extra code needed to appease TS\n        hook: hook.bind(null, state),\n    });\n}\ncreateOAuthUserAuth.VERSION = VERSION;\n"],"names":["VERSION","getAuthentication","state","strategyOptions","authentication","exchangeWebFlowCode","clientId","clientSecret","clientType","onTokenCreated","request","type","tokenType","deviceAuth","createOAuthDeviceAuth","Error","auth","options","invalid","currentAuthentication","Date","expiresAt","refreshToken","hasOwnProperty","method","checkToken","resetToken","token","error","status","message","deleteToken","deleteAuthorization","ROUTES_REQUIRING_BASIC_AUTH","requiresBasicAuth","url","test","hook","route","parameters","endpoint","merge","credentials","btoa","headers","authorization","createOAuthUserAuth","octokitRequest","defaults","getUserAgent","Object","assign","bind"],"mappings":"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"}
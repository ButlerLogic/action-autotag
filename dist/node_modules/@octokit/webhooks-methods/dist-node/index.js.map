{"version":3,"file":"index.js","sources":["../dist-src/types.js","../dist-src/version.js","../dist-src/node/sign.js","../dist-src/utils.js","../dist-src/node/verify.js"],"sourcesContent":["export var Algorithm;\n(function (Algorithm) {\n    Algorithm[\"SHA1\"] = \"sha1\";\n    Algorithm[\"SHA256\"] = \"sha256\";\n})(Algorithm || (Algorithm = {}));\n","export const VERSION = \"3.0.2\";\n","import { createHmac } from \"crypto\";\nimport { Algorithm } from \"../types\";\nimport { VERSION } from \"../version\";\nexport async function sign(options, payload) {\n    const { secret, algorithm } = typeof options === \"object\"\n        ? {\n            secret: options.secret,\n            algorithm: options.algorithm || Algorithm.SHA256,\n        }\n        : { secret: options, algorithm: Algorithm.SHA256 };\n    if (!secret || !payload) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret & payload required for sign()\");\n    }\n    if (!Object.values(Algorithm).includes(algorithm)) {\n        throw new TypeError(`[@octokit/webhooks] Algorithm ${algorithm} is not supported. Must be  'sha1' or 'sha256'`);\n    }\n    return `${algorithm}=${createHmac(algorithm, secret)\n        .update(payload)\n        .digest(\"hex\")}`;\n}\nsign.VERSION = VERSION;\n","export const getAlgorithm = (signature) => {\n    return signature.startsWith(\"sha256=\") ? \"sha256\" : \"sha1\";\n};\n","import { timingSafeEqual } from \"crypto\";\nimport { Buffer } from \"buffer\";\nimport { sign } from \"./sign\";\nimport { VERSION } from \"../version\";\nimport { getAlgorithm } from \"../utils\";\nexport async function verify(secret, eventPayload, signature) {\n    if (!secret || !eventPayload || !signature) {\n        throw new TypeError(\"[@octokit/webhooks-methods] secret, eventPayload & signature required\");\n    }\n    const signatureBuffer = Buffer.from(signature);\n    const algorithm = getAlgorithm(signature);\n    const verificationBuffer = Buffer.from(await sign({ secret, algorithm }, eventPayload));\n    if (signatureBuffer.length !== verificationBuffer.length) {\n        return false;\n    }\n    // constant time comparison to prevent timing attachs\n    // https://stackoverflow.com/a/31096242/206879\n    // https://en.wikipedia.org/wiki/Timing_attack\n    return timingSafeEqual(signatureBuffer, verificationBuffer);\n}\nverify.VERSION = VERSION;\n"],"names":["Algorithm","VERSION","sign","options","payload","secret","algorithm","SHA256","TypeError","Object","values","includes","createHmac","update","digest","getAlgorithm","signature","startsWith","verify","eventPayload","signatureBuffer","Buffer","from","verificationBuffer","length","timingSafeEqual"],"mappings":";;;;;;;AAAO,IAAIA,SAAS;AACpB,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,MAAM,CAAC,GAAG,MAAM;EAC1BA,SAAS,CAAC,QAAQ,CAAC,GAAG,QAAQ;AAClC,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,EAAE,CAAC,CAAC;;ACJ1B,MAAMC,OAAO,GAAG,mBAAmB;;ACGnC,eAAeC,IAAI,CAACC,OAAO,EAAEC,OAAO,EAAE;EACzC,MAAM;IAAEC,MAAM;IAAEC;GAAW,GAAG,OAAOH,OAAO,KAAK,QAAQ,GACnD;IACEE,MAAM,EAAEF,OAAO,CAACE,MAAM;IACtBC,SAAS,EAAEH,OAAO,CAACG,SAAS,IAAIN,SAAS,CAACO;GAC7C,GACC;IAAEF,MAAM,EAAEF,OAAO;IAAEG,SAAS,EAAEN,SAAS,CAACO;GAAQ;EACtD,IAAI,CAACF,MAAM,IAAI,CAACD,OAAO,EAAE;IACrB,MAAM,IAAII,SAAS,CAAC,kEAAkE,CAAC;;EAE3F,IAAI,CAACC,MAAM,CAACC,MAAM,CAACV,SAAS,CAAC,CAACW,QAAQ,CAACL,SAAS,CAAC,EAAE;IAC/C,MAAM,IAAIE,SAAS,CAAE,iCAAgCF,SAAU,gDAA+C,CAAC;;EAEnH,OAAQ,GAAEA,SAAU,IAAGM,iBAAU,CAACN,SAAS,EAAED,MAAM,CAAC,CAC/CQ,MAAM,CAACT,OAAO,CAAC,CACfU,MAAM,CAAC,KAAK,CAAE,EAAC;AACxB;AACAZ,IAAI,CAACD,OAAO,GAAGA,OAAO;;ACpBf,MAAMc,YAAY,GAAIC,SAAS,IAAK;EACvC,OAAOA,SAAS,CAACC,UAAU,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,MAAM;AAC9D,CAAC;;ACGM,eAAeC,MAAM,CAACb,MAAM,EAAEc,YAAY,EAAEH,SAAS,EAAE;EAC1D,IAAI,CAACX,MAAM,IAAI,CAACc,YAAY,IAAI,CAACH,SAAS,EAAE;IACxC,MAAM,IAAIR,SAAS,CAAC,uEAAuE,CAAC;;EAEhG,MAAMY,eAAe,GAAGC,aAAM,CAACC,IAAI,CAACN,SAAS,CAAC;EAC9C,MAAMV,SAAS,GAAGS,YAAY,CAACC,SAAS,CAAC;EACzC,MAAMO,kBAAkB,GAAGF,aAAM,CAACC,IAAI,CAAC,MAAMpB,IAAI,CAAC;IAAEG,MAAM;IAAEC;GAAW,EAAEa,YAAY,CAAC,CAAC;EACvF,IAAIC,eAAe,CAACI,MAAM,KAAKD,kBAAkB,CAACC,MAAM,EAAE;IACtD,OAAO,KAAK;;;;;EAKhB,OAAOC,sBAAe,CAACL,eAAe,EAAEG,kBAAkB,CAAC;AAC/D;AACAL,MAAM,CAACjB,OAAO,GAAGA,OAAO;;;;;"}